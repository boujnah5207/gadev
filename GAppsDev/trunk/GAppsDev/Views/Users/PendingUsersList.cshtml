@model List<DB.PendingUser>
@using DA

@{
    string ReverseOrder;
    if (ViewBag.Order == "ASC")
    {
        ReverseOrder = "DESC";
    }
    else
    {
        ReverseOrder = "ASC";
    }
}

<table class="listTable">
    <tr  class="headingRow">
        @if(ViewBag.IsCheckBoxed)
        {
        <th>@Loc.Dic.SelectedItems</th>
        }
        @if ((bool)ViewBag.IsOrdered)
        {
        <th>@Html.FilterLink((string)ViewBag.BaseUrl, Loc.Dic.Email, "email", ReverseOrder, (string)ViewBag.Sortby)</th>
        <th>@Html.FilterLink((string)ViewBag.BaseUrl, Loc.Dic.Role, "roles", ReverseOrder, (string)ViewBag.Sortby)</th>
        <th>@Html.FilterLink((string)ViewBag.BaseUrl, Loc.Dic.CreationDate, "creation", ReverseOrder, (string)ViewBag.Sortby)</th>
        }
        else
        {
        <th>
            @Loc.Dic.Email
        </th>
        <th>
            @Loc.Dic.Role
        </th>
        <th>
            @Loc.Dic.CreationDate
        </th>
        }
        
        <th>@Loc.Dic.Actions</th>
    </tr>
@for (int index = 0; index < Model.Count; index++)
{
    DB.PendingUser item = Model[index];
    
    <tr class="@if (index % 2 != 0)
                   {<text>oddRow</text>}
                   else
                   {<text>evenRow</text>}" >
        @if(ViewBag.IsCheckBoxed)
            {
                <td>
                <input type="radio" id="checkbox-@item.Id" value="@item.Id" name="selectedUser" />
                </td>
            }
        <td>
            @Html.DisplayTextFor(modelItem => item.Email)
        </td>
        <td>
            @(((DA.RoleType)item.Roles).Describe())
        </td>
        <td>
            @Html.DisplayTextFor(modelItem => item.CreationDate)
        </td>
        <td>
            @Html.ActionLink(Loc.Dic.Details, "PendingUserDetails", new { id=item.Id }) |
            @Html.ActionLink(Loc.Dic.Edit, "EditPending", new { id=item.Id }) |
            @Html.ActionLink(Loc.Dic.Delete, "DeletePending", new { id=item.Id })
        </td>
    </tr>
}
</table>
@if ((bool)ViewBag.IsPaged)
{ 
    <br />  
    @Html.Pagination((string)ViewBag.BaseUrl, (int)ViewBag.NumberOfPages, 10, (int)ViewBag.CurrPage, (string)ViewBag.Sortby, (string)ViewBag.Order)
}