@model GAppsDev.Models.OrderModel

<fieldset>
    <legend>@Loc.Dic.OrderDetails</legend>

    <div class="display-label">
        @Loc.Dic.OrderCreatorName
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Order.User.FirstName)
        @Html.DisplayFor(model => model.Order.User.LastName)
        <br />
        (@Html.DisplayFor(model => model.Order.User.Email))
    </div>
    <br />

    <div class="display-label">
        @Loc.Dic.SupplierName
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Order.Supplier.Name)
    </div>
    <br />
    
    <div class="display-label">
        @Loc.Dic.OrderStatusName
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Order.Orders_Statuses.Name)
    </div>
    <br />
    
    <div class="display-label">
        @Loc.Dic.CreationDate
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Order.CreationDate)
    </div>
    <br />

    @if (Model.Order.IsFutureOrder)
    {
    <div class="display-label">
        @Loc.Dic.FutureOrder
    </div>
    <div class="display-field">
        @Loc.Dic.Month: @Html.GetMonthName((int)ViewBag.FutureMonth)
    </div>
    <br />
    }

    @if (!String.IsNullOrEmpty(Model.Order.Notes))
    {
    <div class="display-label">
        @Loc.Dic.Notes
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Order.Notes)
    </div>
    <br />
    }

    @if (!String.IsNullOrEmpty(Model.Order.OrderApproverNotes))
    {
    <div class="display-label">
        @Loc.Dic.OrderApproverNotes
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Order.OrderApproverNotes)
    </div>
    <br />
    }
    
    <div class="display-label">
        @Loc.Dic.Price
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Order.Price)
    </div>
    <br />

    <div class="display-label"> @Loc.Dic.OrderItems </div>
    @Html.Action("ListOrderItems", new { orderItems = Model.OrderToItem, baseUrl = Url.Action("Index") })    
    <br />

    <div class="display-label"> @Loc.Dic.OrderAllocations </div>
    @Html.Action("ListOrderAllocations", new { orderAllocations = Model.Order.Orders_OrderToAllocation.ToList(), isFutureOrder = ViewBag.IsFutureOrder, baseUrl = Url.Action("Index") })    
    <br />

    @if (Model.Order.Orders_Statuses.Id >= (int)DA.StatusType.InvoiceScannedPendingOrderCreator)
    {
        <div class="display-label"> @Loc.Dic.Actions </div>
        @Html.ActionLink(Loc.Dic.DownloadInvoice, "DownloadInvoice", new { id = Model.Order.Id });
        <br />
        if (Model.Order.Orders_Statuses.Id >= (int)DA.StatusType.ReceiptScanned)
        {
            @Html.ActionLink(Loc.Dic.DownloadReceipt, "DownloadReceipt", new { id = Model.Order.Id });
            <br />
        }
        <br />
    }

    <p>
        @if (Model.Order.UserId == ViewBag.CurrentUserId && (Model.Order.Orders_Statuses.Id == (int)DA.StatusType.Pending || Model.Order.Orders_Statuses.Id == (int)DA.StatusType.PendingOrderCreator))
        {
            @Html.ActionLink(Loc.Dic.Edit, "Edit", new { id = Model.Order.Id })
        }
    </p>
</fieldset>