@model IEnumerable<DB.Order>

@{
    string ReverseOrder;
    if (ViewBag.Order == "ASC")
    {
        ReverseOrder = "DESC";
    }
    else
    {
        ReverseOrder = "ASC";
    }
}

<table>
    <tr>
        @if(ViewBag.IsCheckBoxed)
        {
        <th>Selected</th>
        }
        @if ((bool)ViewBag.IsOrdered)
        {
        <th>@Html.FilterLink((string)ViewBag.BaseUrl, "מספר הזמנה", "number", ReverseOrder, (string)ViewBag.Sortby)</th>
            if (ViewBag.ShowUserName)
            {
                <th>@Html.FilterLink((string)ViewBag.BaseUrl, "שם המזמין", "username", ReverseOrder, (string)ViewBag.Sortby)</th>
            }
        <th>@Html.FilterLink((string)ViewBag.BaseUrl, "תאריך יצירה", "creation", ReverseOrder, (string)ViewBag.Sortby)</th>
        <th>@Html.FilterLink((string)ViewBag.BaseUrl, "שם הספק", "supplier", ReverseOrder, (string)ViewBag.Sortby)</th>
        <th>@Html.FilterLink((string)ViewBag.BaseUrl, "מחיר כולל", "price", ReverseOrder, (string)ViewBag.Sortby)</th>
        <th>@Html.FilterLink((string)ViewBag.BaseUrl, "סטאטוס", "status", ReverseOrder, (string)ViewBag.Sortby)</th>
        }
        else
        { 
        <th>
            @Html.DisplayNameFor(model => model.OrderNumber)
        </th>
            if (ViewBag.ShowUserName)
            {
                <th>
                    שם המזמין
                </th>
            }
        <th>
            @Html.DisplayNameFor(model => model.CreationDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Supplier.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Orders_Statuses.Name)
        </th>
        }
        
        <th>פעולות</th>
    </tr>
@foreach (DB.Order item in Model)
{
    <tr>
        @if(ViewBag.IsCheckBoxed)
            {
                <td>
                <input type="radio" id="checkbox-@item.Id" value="@item.Id" name="selectedOrder" />
                </td>
            }
        <td>
            @Html.DisplayTextFor(modelItem => item.OrderNumber)
        </td>
        @if (ViewBag.ShowUserName)
        {
            <td>
                @Html.DisplayTextFor(modelItem => item.User.FirstName) @Html.DisplayTextFor(modelItem => item.User.LastName)
            </td>
        }
        <td>
            @Html.DisplayTextFor(modelItem => item.CreationDate)
        </td>
        <td>
            @Html.DisplayTextFor(modelItem => item.Supplier.Name)
        </td>
        <td>
            @Html.DisplayTextFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayTextFor(modelItem => item.Orders_Statuses.Name)
        </td>
        <td>
            @Html.ActionLink("הצג", "Details", new { id=item.Id })
            @if (item.Orders_Statuses.Id == (int)DA.StatusType.Pending || item.Orders_Statuses.Id == (int)DA.StatusType.PendingOrderCreator)
            {
                <text>|</text> @Html.ActionLink("ערוך", "Edit", new { id=item.Id })
                <text>|</text> @Html.ActionLink("מחק", "Delete", new { id=item.Id })
                if (DA.Roles.HasRole((DA.RoleType)ViewBag.UserRoles, DA.RoleType.OrdersApprover))
                {
                    <text>|</text> @Html.ActionLink("עדכן סטאטוס", "ModifyStatus", new { id=item.Id })
                }
            }
            @if (item.Orders_Statuses.Id == (int)DA.StatusType.ApprovedPendingInvoice)
            {
                <text>|</text> @Html.ActionLink("הדפס הזמנה", "DownloadOrderAsPdf", new { id = item.Id })
            }

        </td>
    </tr>
}
</table>
@if ((bool)ViewBag.IsPaged)
{ 
    <br />  
    @Html.Pagination((string)ViewBag.BaseUrl, (int)ViewBag.NumberOfPages, 10, (int)ViewBag.CurrPage, (string)ViewBag.Sortby, (string)ViewBag.Order)
}