@model DB.Inventory

@{
    ViewBag.Title = Loc.Dic.Inventory;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.PageName = "Inventory";
    ViewBag.SubPageName = "AllInventory";
}
@section ExtraScripts{
    <script src="~/Scripts/DatePickerScript.js"></script>
}

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>@Loc.Dic.Inventory</legend>

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.ItemId)
        @Html.HiddenFor(model => model.InventarNumber)
        @Html.HiddenFor(model => model.CreationDate)
        @Html.HiddenFor(model => model.OriginalQuantity)

        <div class="editor-label">
            @Loc.Dic.ItemName
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.Orders_Items.Title)
        </div>
        <br />

        <div class="display-label">
            @Loc.Dic.OriginalQuantity
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.OriginalQuantity)
        </div>
        <br />

        <div class="editor-label">
            @Loc.Dic.RemainingQuantity
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RemainingQuantity)
            @Html.ValidationMessageFor(model => model.RemainingQuantity)
        </div>
        <br />

        <div class="editor-label">
            @Loc.Dic.IsOutOfInventory
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsOutOfInventory)
            @Html.ValidationMessageFor(model => model.IsOutOfInventory)
        </div>

        <div class="editor-label">
            @Loc.Dic.Location
        </div>
        <div class="editor-field">
            @Html.DropDownList("LocationId", String.Empty)
            @Html.ValidationMessageFor(model => model.LocationId)
        </div>
        <br />

        <div class="editor-label">
            @Loc.Dic.AssignedTo
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AssignedTo)
            @Html.ValidationMessageFor(model => model.AssignedTo)
        </div>
        <br />

        <div class="editor-label">
            @Loc.Dic.RelatedInventoryItem
        </div>
        <div class="editor-field">
            @Html.DropDownList("RelatedInventoryItem", String.Empty)
            @Html.ValidationMessageFor(model => model.RelatedInventoryItem)
        </div>
        <br />

        <div class="editor-label">
            @Loc.Dic.SerialNumber
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SerialNumber)
            @Html.ValidationMessageFor(model => model.SerialNumber)
        </div>
        <br />

        <div class="editor-label">
            @Loc.Dic.WarrantyPeriod
        </div>

        <div class="editor-field">
            @Loc.Dic.From-
            @Html.TextBoxFor(model => model.WarrentyPeriodStart, new { @class = "dateField" })
            @Loc.Dic.To- 
            @Html.TextBoxFor(model => model.WarrentyPeriodEnd, new { @class = "dateField" })

        </div>
        <br />

        <div class="editor-label">
            @Loc.Dic.Notes
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Notes)
            @Html.ValidationMessageFor(model => model.Notes)
        </div>
        <br />

        <div class="editor-label">
            @Loc.Dic.Status
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>
        <br />

        <p>
            <input type="submit" value="@Loc.Dic.Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink(Loc.Dic.BackToList, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
