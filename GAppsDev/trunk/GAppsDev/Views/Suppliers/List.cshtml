@model List<DB.Supplier>

@{
    string ReverseOrder;
    if (ViewBag.Order == "ASC")
    {
        ReverseOrder = "DESC";
    }
    else
    {
        ReverseOrder = "ASC";
    }
}

@if (ViewBag.IsCheckBoxed)
{
    <button type="button" id="selectAllSuppliers" onclick="$('.supplierCheckbox').attr('checked', true)">@Loc.Dic.SelectAll</button> 
    <button type="button" id="deselectAllSuppliers" onclick="$('.supplierCheckbox').attr('checked', false)">@Loc.Dic.SelectNone</button>
}
<table class="listTable">
    <tr class="headingRow">
        @if (ViewBag.IsCheckBoxed)
        {
            <th>
                @Loc.Dic.SelectedItems
            </th>
        }
        @if ((bool)ViewBag.IsOrdered)
        {
            <th>@Html.FilterLink((string)ViewBag.BaseUrl, Loc.Dic.Name, "name", ReverseOrder, (string)ViewBag.Sortby)</th>
            <th>@Html.FilterLink((string)ViewBag.BaseUrl, Loc.Dic.ImportedSupplierNumber, "number", ReverseOrder, (string)ViewBag.Sortby)</th>
            <th>@Html.FilterLink((string)ViewBag.BaseUrl, Loc.Dic.ImportDate, "date", ReverseOrder, (string)ViewBag.Sortby)</th>
        }
        else
        { 
            <th>
                @Loc.Dic.Name
            </th>
            <th>
                @Loc.Dic.ImportedSupplierNumber
            </th>
            <th>
                @Loc.Dic.ImportDate
            </th>
        }

        <th>@Loc.Dic.Actions</th>
    </tr>
    @for (int index = 0; index < Model.Count; index++)
    {
        DB.Supplier item = Model[index];
        
        <tr class="@if (index % 2 != 0)
                   {<text>oddRow</text>}
                   else
                   {<text>evenRow</text>}" >
            @if (ViewBag.IsCheckBoxed)
            {
                <td>
                    <input type="checkbox" id="checkbox-@item.Id" class="supplierCheckbox" value="@item.Id" name="selectedOrder" />
                </td>
            }
            <td>
                @Html.DisplayTextFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayTextFor(modelItem => item.ExternalId)
            </td>
            <td>
                @Html.DisplayTextFor(modelItem => item.CreationDate)
            </td>

            <td>
                @Html.ActionLink(Loc.Dic.Details, "Details", new { id = item.Id })
                @if(DA.Roles.HasRole((int)ViewBag.UserRoles, DA.RoleType.SystemManager))
                {
                <text>|</text> @Html.ActionLink(Loc.Dic.Edit, "Edit", new { id = item.Id }) 
                <text>|</text> @Html.ActionLink(Loc.Dic.Delete, "Delete", new { id = item.Id })
                }
            </td>
        </tr>
    }
</table>
@if ((bool)ViewBag.IsPaged)
{ 
    <br />  
    @Html.Pagination((string)ViewBag.BaseUrl, (int)ViewBag.NumberOfPages, 10, (int)ViewBag.CurrPage, (string)ViewBag.Sortby, (string)ViewBag.Order)
}