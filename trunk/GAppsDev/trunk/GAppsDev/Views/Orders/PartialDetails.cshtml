@model DB.Order

<fieldset>
    <legend>@Loc.Dic.OrderDetails</legend>

    <div class="display-label">
        @Loc.Dic.OrderCreatorName
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.User.FirstName)
        @Html.DisplayFor(model => model.User.LastName)
        <br />
        (@Html.DisplayFor(model => model.User.Email))
    </div>
    <br />

    <div class="display-label">
        @Loc.Dic.SupplierName
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Supplier.Name)
    </div>
    <br />
    
    <div class="display-label">
        @Loc.Dic.OrderStatusName
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Orders_Statuses.Name)
    </div>
    <br />
    
    <div class="display-label">
        @Loc.Dic.CreationDate
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.CreationDate)
    </div>
    <br />

    @if (Model.Orders_Statuses.Id >= (int)DA.StatusType.InvoiceScannedPendingOrderCreator)
    {
        <div class="display-label"> 
            @Loc.Dic.InvoiceNumber
        </div>
        <div class="display-field">
            @Html.DisplayFor(model => model.InvoiceNumber)
        </div>
        <br />
        
        <div class="display-label"> 
            @Loc.Dic.InvoiceDate 
        </div>
        <div class="display-field">
            @Model.InvoiceDate.Value.ToShortDateString()
        </div>
        <br />
        
        <div class="display-label"> 
            @Loc.Dic.ValueDate 
        </div>
        <div class="display-field">
            @Model.ValueDate.Value.ToShortDateString()
        </div>
        <br />
    }

    @if (Model.IsFutureOrder)
    {
    <div class="display-label">
        @Loc.Dic.FutureOrder
    </div>
    <div class="display-field">
        @{ int futureMonth = Model.Orders_OrderToAllocation.Max(x => x.MonthId); }
        @Html.GetMonthName(futureMonth) @Model.Budget.Year
    </div>
    <br />
    }

    @if (!String.IsNullOrEmpty(Model.Notes))
    {
    <div class="display-label">
        @Loc.Dic.Notes
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Notes)
    </div>
    <br />
    }

    @if (!String.IsNullOrEmpty(Model.OrderApproverNotes))
    {
    <div class="display-label">
        @Loc.Dic.OrderApproverNotes
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.OrderApproverNotes)
    </div>
    <br />
    }
    
    <div class="display-label">
        @Loc.Dic.Price
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Price)
    </div>
    <br />

    <div class="display-label"> @Loc.Dic.OrderItems </div>
    @Html.Action("ListOrderItems", new { orderItems = Model.Orders_OrderToItem.ToList(), baseUrl = Url.Action("Index") })    
    <br />

    <div class="display-label"> @Loc.Dic.OrderAllocations </div>
    @Html.Action("ListOrderAllocations", new { orderAllocations = Model.Orders_OrderToAllocation.ToList(), budgetYear = Model.Budget.Year, isFutureOrder = Model.IsFutureOrder, baseUrl = Url.Action("Index") })    
    <br />

    @if (Model.Orders_Statuses.Id >= (int)DA.StatusType.InvoiceScannedPendingOrderCreator)
    {
        <div class="display-label"> @Loc.Dic.Actions </div>
        @Html.ActionLink(Loc.Dic.DownloadInvoice, "DownloadInvoice", new { id = Model.Id });
        <br />
        if (Model.Orders_Statuses.Id >= (int)DA.StatusType.ReceiptScanned)
        {
            @Html.ActionLink(Loc.Dic.DownloadReceipt, "DownloadReceipt", new { id = Model.Id });
            <br />
        }
        <br />
    }

    <p>
        @if (Model.UserId == ViewBag.CurrentUser.UserId && (Model.Orders_Statuses.Id == (int)DA.StatusType.Pending || Model.Orders_Statuses.Id == (int)DA.StatusType.PendingOrderCreator))
        {
            @Html.ActionLink(Loc.Dic.Edit, "Edit", new { id = Model.Id })
        }
    </p>
</fieldset>